Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
chromSpalink[-which(chromSpalink[,1] %in% SpalChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
write.tree(SpalChromtree, file="CypSpalink.tree")
SpalChromtree[-which(chromSpalink[,1] %in% SpalChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
chromSpalink[-which(SpalChromtree$tip.label %in% chromSpalink[,1],useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
chromSpalink
SpalChromtree$tip.label
SpalChromtree$tip.label
write.tree(SpalChromtree, file="CypSpalink.tree")
palChromtree$tip.label
SpalChromtree$tip.label
SpalChromtree$tip.label
sort(SpalChromtree$tip.label)
sort(SpalChromtree$tip.label)
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
chromSpalink[-which(chromSpalink[,1] %in% SpalChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
write.tree(SpalChromtree, file="CypSpalink.tree")
sort(SpalChromtree$tip.label)
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
chromSpalink[-which(chromSpalink[,1] %in% SpalChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
write.tree(SpalChromtree, file="CypSpalink.tree")
setwd("C:/Users/jimarcor/Google Drive/Tesis/Capítulo 2")
install.packages("ape")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
library(ape)
install.packages("ape")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
setwd("C:/Users/jimarcor/Google Drive/Tesis/Capítulo 2")
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capitulo 2")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
write.tree(HinchChromtree, file="CypHinch.tree")
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=1)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=100)
plot.phylo(HinchChromtree, cex = 0.7,type="fan")
plot.phylo(HinchChromtree, cex = 0.7,type="fan", no.margin=F)
tree<-read.nexus("Cyperaceae.tree")
library(ape)
nex<-read.nexus("export.nex") #Documento guardado como .nex del árbol con figtree
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capitulo 2")
install.packages("ape")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
install.packages("ape")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T, label.offset=5)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T, label.offset=4)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:118,] mytiplabels
mytiplabels <- mytiplabels[1:118,]
mytiplabels
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:Ntip(mytiplabels),]
mytiplabels <- mytiplabels[Ntip(mytiplabels),]
mytiplabels <- Ntip(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- Ntip(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,3] <- paste("s", mytiplabels[,3], sep="")
mytiplabels
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels) = paste(mytiplabels[,5],mytiplabels[,6], mytiplabels[,7], sep="_")
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
HinchChromtree$tip.label
mytiplabels
names(mytiplabels)
names(mytiplabels)
[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels) = paste(mytiplabels[,1])
names(mytiplabels) = paste(mytiplabels[,1])
names(mytiplabels) = mytiplabels[,1]
names(mytiplabels) = mytiplabels
names(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
names(mytiplabels) = mytiplabels
mytiplabels <- mytiplabels[1:207,]
mytiplabels
names(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
names(mytiplabels) = mytiplabels
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
mytiplabels[1:207,]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
HinchChromtree$tip.label
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
HinchChromtree$tip.label <- paste("s", HinchChromtree$tip.label, sep="")
HinchChromtree$tip.label
mytiplabels2 <- mytiplabels[,4]
mytiplabels2 <- mytiplabels[,2]
mytiplabels2 <- mytiplabels[,1]
names(mytiplabels) = mytiplabels
mytiplabels2
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,4] <- paste("s", mytiplabels[,4], sep="")
mytiplabels[,1] <- paste("s", mytiplabels[,1], sep="")
mytiplabels[,1] <- paste("s", mytiplabels[,1], sep="")
mytiplabels[,1] <- paste("s", mytiplabels[,2], sep="")
mytiplabels[,2] <- paste("s", mytiplabels[,2], sep="")
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv")
View(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,4] <- paste("s", mytiplabels[,4], sep="")
names(mytiplabels1)[match(HinchChromtree$tip.label,mytiplabels1)]
names(mytiplabels1)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
mytiplabels
mytiplabels[,4] <- paste("s", mytiplabels[,4], sep="")
mytiplabels[,1] <- paste("s", mytiplabels[,1], sep="")
mytiplabels
HinchChromtree$tip.label <- paste("s", HinchChromtree$tip.label, sep="")
HinchChromtree$tip.label
mytiplabels2 <- mytiplabels[,1]
names(mytiplabels2) = paste(mytiplabels[,2], sep="_")
mytiplabels2
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels2)]
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
HinchChromtree$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
HinchChromtree$tip.label
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels) = paste(mytiplabels[,1], sep="_")
names(mytiplabels) = mytiplabels[,1]
mytiplabels
names(mytiplabels) = mytiplabels[,1]
names(mytiplabels) = mytiplabels[1,]
names(mytiplabels)
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
HinchChromtree$tip.label
[match(HinchChromtree$tip.label,mytiplabels)]
match(HinchChromtree$tip.label,mytiplabels)
mytiplabels
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[,1])]
match(HinchChromtree$tip.label,mytiplabels[,1])
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[,1])]
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";",header=T)
mytiplabels <- mytiplabels[1:207,]
mytiplabels
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[,1])]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[1:207,])]
HinchChromtree$tip.label,mytiplabels[1:207,]
match(HinchChromtree$tip.label,mytiplabels[1:207,])
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,2] <- paste("s", mytiplabels[,2], sep="")
mytiplabels
HinchChromtree$tip.label <- paste("s", HinchChromtree$tip.label, sep="")
HinchChromtree$tip.label
mytiplabels2 <- mytiplabels[,2]
names(mytiplabels) = mytiplabels[1,]
mytiplabels2
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[,2])]
names(mytiplabels)[match(HinchChromtree$tip.label,mytiplabels[,1])]
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels[,1])]
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels2)]
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep="")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,2] <- paste("s", mytiplabels[,2], sep="")
mytiplabels <- read.csv("RESUMEN_Hinchliff.csv", sep=";")
mytiplabels <- mytiplabels[1:207,]
mytiplabels
mytiplabels[,2] <- paste("s", mytiplabels[,2], sep="")
mytiplabels
HinchChromtree$tip.label <- paste("s", HinchChromtree$tip.label, sep="")
HinchChromtree$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
HinchChromtree$tip.label <- paste("s", HinchChromtree$tip.label, sep="")
HinchChromtree$tip.label
mytiplabels2 <- mytiplabels[,2]
mytiplabels2
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels2)]
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels)]
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels[,1])]
names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels)]
HinchChromtree$tip.label <- names(mytiplabels2)[match(HinchChromtree$tip.label,mytiplabels2)]
plot(HinchChromtree2)
plot(HinchChromtree)
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
chromHinch[-which(chromHinch[,1] %in% HinchChromtree$tip.label,useNames=T),] #VER LAS QUE FALTAN EN LA LISTA Y TENGO NUMERO CROMOSOMA
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capitulo 2")
install.packages("ape")
library(ape)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=T, sep=",")
tabchrom
matcmatch(sort(HinchChromtree$tip.label), sort(tabchrom))
match(sort(HinchChromtree$tip.label), sort(tabchrom))
match(sort(HinchChromtree$tip.label), sort(tabchrom[,1]))
names(tabchrom) = paste(tabchrom[,1],tabchrom[,2], sep="_")
names(tabchrom) = paste0(tabchrom[,1],tabchrom[,2], sep="_")
names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
names(tabchrom) = paste(tabchrom[,1] , tabchrom[,2] , sep="_")
names(tabchrom) = paste(tabchrom[,2] , tabchrom[,1] , sep="_")
tabchrom[,2]
tabchrom[,1]
paste(tabchrom[,1] , tabchrom[,2] , sep="_")
names(tabchrom) <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")
[match(sort(rbcltree$tip.label),sort(tabchrom)]
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(rbcltree$tip.label),sort(tabchrom))]
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(HinchChromtree$tip.label),sort(tabchrom))]
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(HinchChromtree$tip.label),sort(tabchrom[,1]))]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
sort(HinchChromtree$tip.label) <- paste(sort(tabchrom[,1]) , tabchrom[,2] , sep="_")[match(sort(HinchChromtree$tip.label),sort(tabchrom[,1]))]
match(sort(HinchChromtree$tip.label),sort(tabchrom[,1]))
[match(sort(HinchChromtree$tip.label),sort(tabchrom[,1]))]
sort(HinchChromtree$tip.label),sort(tabchrom[,1]))
sort(HinchChromtree$tip.label),sort(tabchrom[,1])
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(tabchrom[,1]),sort(HinchChromtree$tip.label))]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(tabchrom[,1]),sort(HinchChromtree$tip.label))]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
HinchChromtree$tip.label <- paste(tabchrom[,1] , tabchrom[,2] , sep="_")[match(sort(tabchrom[,1]),sort(HinchChromtree$tip.label))]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
HinchChromtree$tip.label
match(sort(tabchrom[,1]),sort(HinchChromtree$tip.label))
tabchrom
names(tabchrom)
str(chromtab)
str(tabchrom)
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
str(tabchrom)
tabchrom<-read.csv("clipboard", sep=",") #archivo RESUMEN_Hinchliff
tabchrom
str(tabchrom)
tabchrom<-read.csv("clipboard") #archivo RESUMEN_Hinchliff
tabchrom
tabchrom<-read.csv("clipboard") #archivo RESUMEN_Hinchliff
tabchrom<-read.csv("clipboard", header=F) #archivo RESUMEN_Hinchliff
tabchrom
names(tabchrom)
row.names(tabchrom)
row.names(tabchrom)
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
row.names(tabchrom)
row.names(tabchrom) <- paste(tabchrom[,1], tabchrom[,2], sep="_")
row.names(tabchrom)
HinchChromtree$tip.label <- row.names(tabchrom)[match(tabchrom[,1],HinchChromtree$tip.label)]
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(tabchrom[,1],HinchChromtree$tip.label)]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(tabchrom[,1],HinchChromtree$tip.label)]
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(tabchrom[,1],HinchChromtree$tip.label)]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
names(tabchrom)
names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
HinchChromtree
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
row.names(tabchrom) = paste(tabchrom[,1], bold(tabchrom[,2]), sep="_")
install.packages("plotmath")
library(plotmath)
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T, tip.color = palette(rainbow)[tabchrom[,2]])
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T,  tip.color = palette(rainbow)[tabchrom[,2]])
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=2)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=10)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, srt= 2)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, srt= 1)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, srt= 50)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, label.offset= 10)
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, label.offset= 1)
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Spalink
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
SpalChromtree$tip.label <- row.names(tabchrom)[match(SpalChromtree$tip.label,tabchrom[,1])]
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T, label.offset= 1)
tabchrom
row.names(tabchrom)
tabchrom
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Spalink
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
SpalChromtree$tip.label <- row.names(tabchrom)[match(SpalChromtree$tip.label,tabchrom[,1])]
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T, label.offset= 1)
row.names(tabchrom)
SpalChromtree$tip.label
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T)
SpalChromtree$tip.label <- row.names(tabchrom)[match(SpalChromtree$tip.label,tabchrom[,1])]
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T, label.offset= 1)
library(ape)
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capitulo 2")
unprunedtreeSpalink<-read.nexus("./Spalink et al 2016/Cyperaceae.tree")
chromSpalink<-read.csv("RESUMEN_Spalink.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeSpalink$tip.label
SpalChromtree<-drop.tip(phy=unprunedtreeSpalink,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
SpalChromtree
tabchrom<-read.csv("clipboard", header=T, sep=",") #archivo RESUMEN_Spalink
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
SpalChromtree$tip.label <- row.names(tabchrom)[match(SpalChromtree$tip.label,tabchrom[,1])]
plot.phylo(SpalChromtree, cex = 0.7,type="fan",no.margin=T, label.offset= 1)
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, label.offset= 1)
unprunedtreeHinch<-read.nexus("./Hinchliff & Roalson 2013/export.nex")
chromHinch<-read.csv("RESUMEN_Hinchliff.csv", header=T,sep=";") #Dos primeras columnas de RESUMEN_Hinchliff_Spalink.xls
Faltan1<-read.csv("Faltan FINALES.csv", header=F,sep=";") #Los que no tenemos y queremos eliminar
Faltan<-as.character(Faltan1[,1]) #Convierto en caracter, porque es obligatorio para hacer el pruning
unprunedtreeHinch$tip.label
HinchChromtree<-drop.tip(phy=unprunedtreeHinch,Faltan,subtree=F) #Elimina los tips que no tenemos muestreados
HinchChromtree
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=T)
tabchrom<-read.csv("clipboard", header=F, sep=",") #archivo RESUMEN_Hinchliff
tabchrom
row.names(tabchrom) = paste(tabchrom[,1], tabchrom[,2], sep="_")
HinchChromtree$tip.label <- row.names(tabchrom)[match(HinchChromtree$tip.label,tabchrom[,1])]
plot.phylo(HinchChromtree, cex = 0.7,type="fan",no.margin=F, label.offset= 1)
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capítulo 2/RESULTADOS/PARTICIONES DE ARBOLES (inputs)/Spalink/Nodo 4-1 Spalink")
setwd("C:/Users/nacho/Google Drive/TESIS/Capitulo 2/artículo/New results/Figures and Appendices")
library(ape)
library(geiger)
cyperaceae<-read.nexus("Supp Appendix S1 - Cyperaceae.nex")
cyperaceae<-drop.tip(cyperaceae, c("Carex_humilus", "Gahnia_melanocephala", "Mapania_pycnocephala"))
cyperaceae<-ladderize(cyperaceae, right=FALSE)
write.nexus(cyperaceae, file="Supp Appendix S1new - Cyperaceae.nex")
