write(paste0(
">",
row.names(chrom)[match(Subtree.2$tip.label,chrom[,1])]),
file="cyperaceae2/cyperaceae.txt")
Node4 <- node.leaves(phy, mrca(phy)["Bulbostylis_barbata", "Carex_lyngbyei"])
Node3 <- node.leaves(phy, mrca(phy)["Cyperus_laevigatus", "Cyperus_alopecuroides"])
Node2 <- node.leaves(phy, mrca(phy)["Carex_pseudorufa", "Carex_lyngbyei"])
Node1 <- node.leaves(phy, mrca(phy)["Bulbostylis_barbata", "Cyperus_alopecuroides"])
Subtree.2 <- drop.tip(phy,setdiff(phy$tip.label,Node2),subtree=F)
plot.phylo(Subtree.2, cex = 0.4,type="fan",no.margin=F, label.offset= 0.05)
write.tree(Subtree.2, file="cyperaceae2/cyperaceae.tree")
write(paste0(
">",
row.names(chrom)[match(Subtree.2$tip.label,chrom[,1])]),
file="cyperaceae2/cyperaceae.txt")
Subtree.3 <- drop.tip(phy,setdiff(phy$tip.label,Node3),subtree=F)
plot.phylo(Subtree.3, cex = 0.4,type="fan",no.margin=F, label.offset= 0.05)
write.tree(Subtree.3, file="cyperaceae3/cyperaceae.tree")
write(paste0(
">",
row.names(chrom)[match(Subtree.3$tip.label,chrom[,1])]),
file="cyperaceae3/cyperaceae.txt")
Subtree.4 <- drop.tip(phy,setdiff(phy$tip.label,Node4),subtree=F)
plot.phylo(Subtree.4, cex = 0.4,type="fan",no.margin=F, label.offset= 0.05)
write.tree(Subtree.4, file="cyperaceae4/cyperaceae.tree")
write(paste0(
">",
row.names(chrom)[match(Subtree.4$tip.label,chrom[,1])]),
file="cyperaceae4/cyperaceae.txt")
PhyChrom <- phy<-drop.tip(phy, setdiff(cyperaceae$tip.label, haploid[,1]))
library(ape)
phy<-read.tree("New results/cyperaceae_chronogram.tree")
phy<-ladderize(phy)
haploid <- read.table(file = "New results/chrom.txt", sep=";", header=FALSE)
library(car)
haploid <- read.table(file = "New results/chrom.txt", sep=";", header=FALSE)
setwd("C:/Users/jimarcor/Google Drive/TESIS/Capitulo 2/artículo")
haploid <- read.table(file = "New results/chrom.txt", sep=";", header=FALSE)
library(car)
hist(haploid[,2],main = "Haploid number distribution in sedges", xlab = "Chromosome number (n)")
library(ape)
phy<-read.tree("New results/cyperaceae_chronogram.tree")
phy<-ladderize(phy)
PhyChrom <- phy<-drop.tip(phy, setdiff(cyperaceae$tip.label, haploid[,1]))
PhyChrom <- phy<-drop.tip(phy, setdiff(phy$tip.label, haploid[,1]))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
rect(min(haploid[,2])-1, -1 , max(haploid[,2])+1, Ntip(PhyChrom)+3, col = "gray15", border=NA) #a?ado fondo para que se vean los colores
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
title(xlab="Chromosome number (2n)")
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
plot(PhyChrom,cex=0.1,show.tip.label = F)
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
title(xlab="Chromosome number (n)")
rect(min(haploid[,2])-1, -1 , max(haploid[,2])+1, Ntip(PhyChrom)+3, col = "gray15", border=NA) #a?ado fondo para que se vean los colores
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
title(xlab="Chromosome number (n)")
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=T, xlab="") #plot axes
F
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, 10:80)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, 10:80)
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = c(2, 9, 7))
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = c(2, 9, 7))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = 10:80)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = 10:80)
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = rep(10, 10:80))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  xaxp = rep(10, 80))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10, 80))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10, 10:80))
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10, 10:80))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, 10))
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, 10))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, 20))
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, 20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10, 20))
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10, 20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80,each= 20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80,each= 20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, each= 40))
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, each= 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, each= 40))
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, each= 40))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, each= 10, times = 4))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(10:80, each= 10, times = 4))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(1:4, each= 10, times = 4))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, each= 20, times = 4))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, each= 20, times = 4))
title(xlab="Chromosome number (n)")
#legend("bottomleft", legend=unique(conteo[,4]), pch=15, col=unique(colors(distinct=T)[conteo$Section]),cex=0.8, border=F,y.intersp=0.5, ncol=2, bg="white")
#abline(v=mean(conteo[,3]))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(0:80, times = 4))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(0:80, times = 4))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(10:80, times = 3))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(10:80, times = 3))
title(xlab="Chromosome number (n)")
#legend("bottomleft", legend=unique(conteo[,4]), pch=15, col=unique(colors(distinct=T)[conteo$Section]),cex=0.8, border=F,y.intersp=0.5, ncol=2, bg="white")
#abline(v=mean(conteo[,3]))
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(15:80, times = 3))
title(xlab="Chromosome number (n)")
#legend("bottomleft", legend=unique(conteo[,4]), pch=15, col=unique(colors(distinct=T)[conteo$Section]),cex=0.8, border=F,y.intersp=0.5, ncol=2, bg="white")
#abline(v=mean(conteo[,3]))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(0:80, times = 3))
title(xlab="Chromosome number (n)")
#legend("bottomleft", legend=unique(conteo[,4]), pch=15, col=unique(colors(distinct=T)[conteo$Section]),cex=0.8, border=F,y.intersp=0.5, ncol=2, bg="white")
#abline(v=mean(conteo[,3]))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(0:80, times = 10))
title(xlab="Chromosome number (n)")
#legend("bottomleft", legend=unique(conteo[,4]), pch=15, col=unique(colors(distinct=T)[conteo$Section]),cex=0.8, border=F,y.intersp=0.5, ncol=2, bg="white")
#abline(v=mean(conteo[,3]))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep.int(0:80, times = 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, times = 40))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1,  rep(0:80, times = 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, each=20)
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, each=20)
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(each=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(each=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(80, each=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(1:80, each=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(1:80, times=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(1:80, times=20))
title(xlab="Chromosome number (n)")
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(1:80, times=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(1:80, times=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(1:80, 20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(1:80, 80))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(x, 80))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep_len(x, 1:80))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(10, each=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(10:80, each=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(10:80, each=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(10:100, each=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(0:100, each=20))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(0:100, each=20))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(0:100, each=40))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(0:100, each=40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(0:100, each = 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(20:80, each = 40))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(20:80, each = 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(0,80), each = 40))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(0,80), each = 40))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(0:80), each = 40))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(10,40,80)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(10,30,60,90)))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(10,30,60,90)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1, rep(c(0,30,60,90)))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
#para diferenciar por valores  # col= ifelse(conteo[,3] >= 74, "blue2", ifelse(conteo[,3] <52 ,"green4", "yellow3")))
axis(1)
title(xlab="Chromosome number (n)")
axis(1, c(0, 20, 40, 60, 80))
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0.5, 0.5))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0, 0))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0, 0))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5.5,0,3,3))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5.5,0,3,3),
mai = c(1, 0, 0, 1))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5.5,0,1,1),
mai = c(1, 0, 0, 1))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
title(xlab="Chromosome number (n)")
par(mfrow=c(1,2), mar=c(5,0,3,3),
mai = c(1, 0, 0, 1))
plot(PhyChrom,cex=0.1,show.tip.label = F)
axis(1)
plot.default(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], type="n", axes=F, xlab="") #plot axes
points(factor(haploid[,1],levels=PhyChrom$tip.label)~haploid[,2], #al usar plot.default evito que muestre las variables como boxplots (en cuyo caso deber??a ser invertido el orden de los ejes: conteo[,3] ~factor(conteo[,1],levels=CarexChrom$tip.label))
axes=F, ylab="",xlab="", pch="·", cex=1.5, ylim=c(1,Ntip(PhyChrom)))
axis(1, c(0, 20, 40, 60, 80))
